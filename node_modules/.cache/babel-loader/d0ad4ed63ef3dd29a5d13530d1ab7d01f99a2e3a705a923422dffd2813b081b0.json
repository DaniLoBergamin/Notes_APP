{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { SelectOption } from \"./select-option\";\nexport const SELECT_CONTAINER_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"],\n  states: [\"focused\", \"hovered\", \"loading\"]\n};\nconst mapSelectContainerChildren = (children, state) => {\n  let classNameExtension;\n  const mapped = React.Children.map(children, (child, i) => {\n    if (typeof child === \"object\" && child !== null && \"type\" in child) {\n      if (child.type === \"select\" || child.type === Select) {\n        classNameExtension = classNames({\n          \"is-multiple\": child.props.multiple\n        });\n        if (state === \"focused\" || state === \"hovered\") {\n          return React.cloneElement(child, {\n            className: classNames(`is-${state}`, child.props.className)\n          });\n        }\n        return child;\n      } else if (child.type === React.Fragment) {\n        const fragmentMapped = mapSelectContainerChildren(child.props.children, state);\n        classNameExtension = classNames(classNameExtension, fragmentMapped.classNameExtension);\n        return React.createElement(React.Fragment, {\n          children: fragmentMapped.children\n        });\n      }\n    }\n    return child;\n  });\n  return {\n    children: mapped,\n    classNameExtension\n  };\n};\nexport const SelectContainer = forwardRefAs((_a, ref) => {\n  var {\n      className,\n      children,\n      color,\n      fullwidth,\n      rounded,\n      size,\n      state\n    } = _a,\n    rest = tslib_1.__rest(_a, [\"className\", \"children\", \"color\", \"fullwidth\", \"rounded\", \"size\", \"state\"]);\n  const mapped = mapSelectContainerChildren(children, state);\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"select\", {\n      [`is-${color}`]: color,\n      \"is-fullwidth\": fullwidth,\n      \"is-loading\": state === \"loading\",\n      \"is-rounded\": rounded,\n      [`is-${size}`]: size\n    }, mapped.classNameExtension, className),\n    children: mapped.children,\n    ref: ref\n  }, rest));\n}, {\n  as: \"div\"\n});\nSelectContainer.displayName = \"Select.Container\";\nSelectContainer.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullwidth: PropTypes.bool,\n  rounded: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  state: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nexport const Select = Object.assign(forwardRefAs((props, ref) => React.createElement(Generic, Object.assign({\n  ref: ref\n}, props)), {\n  as: \"select\"\n}), {\n  Container: SelectContainer,\n  Option: SelectOption\n});\nSelect.displayName = \"Select\";","map":{"version":3,"names":["classNames","PropTypes","React","forwardRefAs","Generic","SelectOption","SELECT_CONTAINER_DEFAULTS","sizes","states","mapSelectContainerChildren","children","state","classNameExtension","mapped","Children","map","child","i","type","Select","props","multiple","cloneElement","className","Fragment","fragmentMapped","createElement","SelectContainer","_a","ref","color","fullwidth","rounded","size","rest","tslib_1","__rest","Object","assign","as","displayName","propTypes","oneOfType","string","number","bool","Container","Option"],"sources":["../../../src/elements/form/select.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}