{"ast":null,"code":"var _jsxFileName = \"C:\\\\APP_Evernote\\\\javascript_note\\\\src\\\\components\\\\auth\\\\register_form\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UserService from '../../../services/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm() {\n  _s();\n  // Controlled form\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // After creating the account, the user is automatically directed to Login.\n  const [redirectToLogin, setRedirectToLogin] = useState(false);\n\n  // Invalid password or email - Show error to user.\n  const [error, setError] = useState(false);\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    try {\n      const user = await UserService.register({\n        name: name,\n        email: email,\n        password: password\n      });\n      setRedirectToLogin(true);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  // Directed to '/login'\n  if (redirectToLogin) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/login\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Column.Group, {\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          size: 12,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"name\",\n                required: true,\n                name: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                required: true,\n                name: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                required: true,\n                name: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Column.Group, {\n                breakpoint: \"mobile\",\n                children: [/*#__PURE__*/_jsxDEV(Column, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"button is-white has-text-custom-purple\",\n                    onClick: e => setRedirectToLogin(true),\n                    children: \"Login or\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Column, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"custom-purple\",\n                    outlined: true,\n                    children: \"Register\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), error && /*#__PURE__*/_jsxDEV(Help, {\n            color: \"danger\",\n            children: \"Email or Password invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterForm, \"Yvq/KkJrw92/NNtxriXGsobJgQg=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","Fragment","useState","Button","Field","Control","Input","Column","Section","Help","Label","Redirect","UserService","jsxDEV","_jsxDEV","RegisterForm","_s","name","setName","email","setEmail","password","setPassword","redirectToLogin","setRedirectToLogin","error","setError","handleSubmit","evt","preventDefault","user","register","to","pathname","fileName","_jsxFileName","lineNumber","columnNumber","children","Group","centered","size","type","required","value","onChange","e","target","breakpoint","className","onClick","color","outlined","_c","$RefreshReg$"],"sources":["C:/APP_Evernote/javascript_note/src/components/auth/register_form/index.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport UserService from '../../../services/users';\r\n\r\nfunction RegisterForm() {\r\n\r\n    // Controlled form\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    // After creating the account, the user is automatically directed to Login.\r\n    const [redirectToLogin, setRedirectToLogin] = useState(false);\r\n    \r\n    // Invalid password or email - Show error to user.\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n\r\n        try {\r\n        const user = await UserService.register({name: name,email: email,password: password});\r\n        setRedirectToLogin(true);\r\n        } catch (error) {\r\n             setError(true)\r\n           }\r\n         }\r\n\r\n    // Directed to '/login'\r\n    if(redirectToLogin)\r\n        return <Redirect to={{pathname: \"/login\"}}/>\r\n\r\n    return (\r\n        <Fragment>\r\n            <Column.Group centered>\r\n            <form>\r\n                <Column size={12}>\r\n                    <Field>\r\n                        <Label size=\"small\">Name:</Label>\r\n                        <Control>\r\n                            <Input type=\"name\" \r\n                            required \r\n                            name=\"name\" \r\n                            value={name} \r\n                            onChange={e => setName(e.target.value)}/>\r\n                        </Control>\r\n                    </Field>\r\n                    <Field>\r\n                        <Label size=\"small\">Email:</Label>\r\n                        <Control>\r\n                            <Input \r\n                            type=\"email\" \r\n                            required \r\n                            name=\"email\"\r\n                            value={email} \r\n                            onChange={e => setEmail(e.target.value)}/>\r\n                        </Control>\r\n                    </Field>\r\n                    <Field>\r\n                        <Label size=\"small\">Password:</Label>\r\n                    <Control>\r\n                        <Input \r\n                        type=\"password\" \r\n                        required \r\n                        name=\"password\"\r\n                        value={password} \r\n                        onChange={e => setPassword(e.target.value)}/>\r\n                    </Control>\r\n                    </Field>\r\n                    <Field>\r\n                        <Control>\r\n                            <Column.Group breakpoint=\"mobile\">\r\n                                <Column>\r\n                                    <a className=\"button is-white has-text-custom-purple\"\r\n                                    onClick={e => setRedirectToLogin(true)}\r\n                                    >Login or</a>\r\n                                </Column>\r\n                                <Column>\r\n                                    <Button color=\"custom-purple\" outlined>Register</Button>\r\n                                </Column>\r\n                            </Column.Group>\r\n                        </Control>\r\n                    </Field>\r\n                        {/* Display error to user */}\r\n                        { error && <Help color=\"danger\">Email or Password invalid</Help> }\r\n                </Column>\r\n            </form>\r\n            </Column.Group>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}