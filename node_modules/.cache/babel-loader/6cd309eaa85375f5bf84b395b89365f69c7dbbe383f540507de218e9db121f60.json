{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { Checkbox } from \"./checkbox\";\nimport { Radio } from \"./radio\";\nexport const LABEL_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"]\n};\nconst identifyLabelDiscriminator = children => {\n  let discriminator = \"label\";\n  React.Children.forEach(children, (child, i) => {\n    if (typeof child === \"object\" && child !== null && \"type\" in child) {\n      if (child.type === Checkbox || child.type === \"input\" && child.props.type === \"checkbox\") {\n        discriminator = \"checkbox\";\n      } else if (child.type === Radio || child.type === \"input\" && child.props.type === \"radio\") {\n        discriminator = \"radio\";\n      } else if (child.type === React.Fragment) {\n        discriminator = identifyLabelDiscriminator(child.props.children);\n      }\n    }\n  });\n  return discriminator;\n};\nexport const Label = forwardRefAs((_a, ref) => {\n  var {\n      className,\n      disabled,\n      size\n    } = _a,\n    rest = tslib_1.__rest(_a, [\"className\", \"disabled\", \"size\"]);\n  const discriminator = identifyLabelDiscriminator(rest.children);\n  return React.createElement(Generic, Object.assign({\n    className: classNames({\n      [`${discriminator}`]: discriminator,\n      \"is-disabled\": disabled,\n      [`is-${size}`]: size\n    }, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"label\"\n});\nLabel.displayName = \"Label\";\nLabel.propTypes = {\n  disabled: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"names":["classNames","PropTypes","React","forwardRefAs","Generic","Checkbox","Radio","LABEL_DEFAULTS","sizes","identifyLabelDiscriminator","children","discriminator","Children","forEach","child","i","type","props","Fragment","Label","_a","ref","className","disabled","size","rest","tslib_1","__rest","createElement","Object","assign","as","displayName","propTypes","bool","oneOfType","string","number"],"sources":["../../../src/elements/form/label.tsx"],"sourcesContent":[null],"mappings":";AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,YAAY,EAAEC,OAAO,QAAQ,YAAY;AAGlD,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,KAAK,QAAQ,SAAS;AAE/B,OAAO,MAAMC,cAAc,GAAG;EAC5BC,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO;CACnC;AAoBD,MAAMC,0BAA0B,GAAIC,QAAyB,IAAI;EAC/D,IAAIC,aAAa,GAAG,OAAO;EAE3BT,KAAK,CAACU,QAAQ,CAACC,OAAO,CAACH,QAAQ,EAAE,CAACI,KAAK,EAAEC,CAAC,KAAI;IAC5C,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,IAAI,MAAM,IAAIA,KAAK,EAAE;MAClE,IACEA,KAAK,CAACE,IAAI,KAAKX,QAAQ,IACtBS,KAAK,CAACE,IAAI,KAAK,OAAO,IACpBF,KAAK,CAACG,KAA4C,CAACD,IAAI,KACtD,UAAW,EACf;QACAL,aAAa,GAAG,UAAU;OAC3B,MAAM,IACLG,KAAK,CAACE,IAAI,KAAKV,KAAK,IACnBQ,KAAK,CAACE,IAAI,KAAK,OAAO,IACpBF,KAAK,CAACG,KAA4C,CAACD,IAAI,KAAK,OAAQ,EACvE;QACAL,aAAa,GAAG,OAAO;OACxB,MAAM,IAAIG,KAAK,CAACE,IAAI,KAAKd,KAAK,CAACgB,QAAQ,EAAE;QACxCP,aAAa,GAAGF,0BAA0B,CACvCK,KAAK,CAACG,KAA+D,CACnEP,QAAQ,CACZ;;;EAGP,CAAC,CAAC;EAEF,OAAOC,aAAa;AACtB,CAAC;AAED,OAAO,MAAMQ,KAAK,GAAGhB,YAAY,CAC/B,CAACiB,EAAsC,EAAEC,GAAG,KAAI;MAA/C;MAAEC,SAAS;MAAEC,QAAQ;MAAEC;IAAI,IAAAJ,EAAW;IAATK,IAAA,GAAAC,OAAA,CAAAC,MAAA,CAAAP,EAAA,oCAAO;EACnC,MAAMT,aAAa,GAAGF,0BAA0B,CAACgB,IAAI,CAACf,QAAQ,CAAC;EAE/D,OACER,KAAA,CAAA0B,aAAA,CAACxB,OAAO,EAAAyB,MAAA,CAAAC,MAAA;IACNR,SAAS,EAAEtB,UAAU,CACnB;MACE,CAAC,GAAGW,aAAa,EAAE,GAAGA,aAAa;MACnC,aAAa,EAAEY,QAAQ;MACvB,CAAC,MAAMC,IAAI,EAAE,GAAGA;KACjB,EACDF,SAAS,CACV;IACDD,GAAG,EAAEA;EAAG,GACJI,IAAI,EACR;AAEN,CAAC,EACD;EAAEM,EAAE,EAAE;AAAO,CAAE,CAChB;AAEDZ,KAAK,CAACa,WAAW,GAAG,OAAO;AAC3Bb,KAAK,CAACc,SAAS,GAAG;EAChBV,QAAQ,EAAEtB,SAAS,CAACiC,IAAI;EACxBV,IAAI,EAAEvB,SAAS,CAACkC,SAAS,CAAC,CAAClC,SAAS,CAACmC,MAAM,EAAEnC,SAAS,CAACoC,MAAM,CAAC;CAC/D"},"metadata":{},"sourceType":"module","externalDependencies":[]}