{"ast":null,"code":"var _jsxFileName = \"C:\\\\APP_Evernote\\\\javascript_note\\\\src\\\\components\\\\users\\\\user_edit_form\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport UsersService from '../../../services/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersEditForm() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(null);\n  const initializeUser = async () => {\n    const user = await JSON.parse(localStorage.getItem('user'));\n    setName(user['name']);\n    setEmail(user['email']);\n  };\n  useEffect(() => {\n    initializeUser();\n  }, []);\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    try {\n      await UsersService.update({\n        email: email,\n        name: name\n      });\n      setStatus(\"success\");\n    } catch (err) {\n      setStatus(\"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"has-text-grey\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"name\",\n            value: name || \"\",\n            onChange: e => setName(e.target.value),\n            required: true,\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"has-text-grey\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            value: email || \"\",\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: /*#__PURE__*/_jsxDEV(Column.Group, {\n            children: /*#__PURE__*/_jsxDEV(Column, {\n              className: \"has-text-right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"custom-purple\",\n                outlined: true,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), status == \"error\" && /*#__PURE__*/_jsxDEV(Help, {\n        color: \"danger\",\n        children: \"Update problem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), status == \"success\" && /*#__PURE__*/_jsxDEV(Help, {\n        color: \"primary\",\n        children: \"Successfully updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersEditForm, \"R2xktC0sKDOqDXYYoYczjNXnw3E=\");\n_c = UsersEditForm;\nexport default UsersEditForm;\nvar _c;\n$RefreshReg$(_c, \"UsersEditForm\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Button","Field","Control","Input","Column","Title","Help","Label","UsersService","jsxDEV","_jsxDEV","UsersEditForm","_s","email","setEmail","name","setName","status","setStatus","initializeUser","user","JSON","parse","localStorage","getItem","handleSubmit","evt","preventDefault","update","err","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","required","Group","color","outlined","_c","$RefreshReg$"],"sources":["C:/APP_Evernote/javascript_note/src/components/users/user_edit_form/index.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\r\nimport UsersService from '../../../services/users';\r\n\r\nfunction UsersEditForm() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [status, setStatus] = useState(null);\r\n\r\n    const initializeUser = async () => {\r\n    const user = await JSON.parse(localStorage.getItem('user'));\r\n        setName(user['name']);\r\n        setEmail(user['email']);\r\n    }\r\n\r\n    useEffect(() =>{\r\n    initializeUser()\r\n    }, [])\r\n\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n\r\n    try {\r\n        await UsersService.update({ email: email, name: name });\r\n            setStatus(\"success\")\r\n        }catch(err){\r\n            setStatus(\"error\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit}>\r\n                <Field>\r\n                    <Control>\r\n                        <Label className=\"has-text-grey\">Full Name</Label>\r\n                            <Input\r\n                                    type=\"name\"\r\n                                    value={name || \"\"}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                    required\r\n                                    name=\"name\" />\r\n                    </Control>\r\n                </Field>\r\n                <Field>\r\n                    <Control>\r\n                        <Label className=\"has-text-grey\">Email</Label>\r\n                            <Input\r\n                                    type=\"email\"\r\n                                    value={email || \"\"}\r\n                                    onChange={e => setEmail(e.target.value)}\r\n                                    required\r\n                                    name=\"email\" />\r\n                    </Control>\r\n                </Field>\r\n\r\n                <Field>\r\n                    <Control>\r\n                        <Column.Group>\r\n                            <Column className=\"has-text-right\">\r\n                                <Button color=\"custom-purple\" outlined>Update</Button>\r\n                            </Column>\r\n                        </Column.Group>\r\n                    </Control>\r\n                </Field>\r\n                    {status == \"error\" &&\r\n                        <Help color=\"danger\">Update problem</Help>\r\n                    }\r\n                    {status == \"success\" &&\r\n                        <Help color=\"primary\">Successfully updated</Help>\r\n                    }\r\n            </form>\r\n        </Fragment>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default UsersEditForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}