{"ast":null,"code":"var _jsxFileName = \"C:\\\\APP_Evernote\\\\javascript_note\\\\src\\\\components\\\\notes\\\\list\\\\index.js\";\nimport React, { Fragment } from 'react';\nimport { Button, Column, Tag, Title, List } from \"rbx\";\nimport Moment from 'moment';\n\n// Moment - Used to verify a date and extract information.\n// List - Notes from components/notes to LIST.ITEM (Notes loop).\n\n// onClick - The note you click will change color and will be displayed on the screen.\n// substring (0,15) - Will display 16 characters of title.\n\n//Regular expression (REGEX) - (/(<([^>]+)>)/ig, \"\") - Technique to select elements and not show html commands used in the text.\n//EX: Title in bold - Will not show <b>, only the title already edited.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListNotes(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Column.Group, {\n      breakpoint: \"mobile\",\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        size: 6,\n        offset: 1,\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          size: 6,\n          children: [props.notes.length, \" Notes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: \"notes-list\",\n      children: props.notes.map((item, key) => /*#__PURE__*/_jsxDEV(List.Item, {\n        onClick: () => props.selectNote(item._id),\n        active: item == props.current_note,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          size: 6,\n          children: item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0, 15)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          size: 6,\n          subtitle: true,\n          spaced: false,\n          children: item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0, 30)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Column.Group, {\n          breakpoint: \"mobile\",\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            size: 10,\n            children: /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"dark\",\n              children: Moment(item.created_at).format('DD/MM')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = ListNotes;\nexport default ListNotes;\nvar _c;\n$RefreshReg$(_c, \"ListNotes\");","map":{"version":3,"names":["React","Fragment","Button","Column","Tag","Title","List","Moment","jsxDEV","_jsxDEV","ListNotes","props","children","Group","breakpoint","size","offset","notes","length","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","key","Item","onClick","selectNote","_id","active","current_note","title","replace","substring","subtitle","spaced","body","color","created_at","format","_c","$RefreshReg$"],"sources":["C:/APP_Evernote/javascript_note/src/components/notes/list/index.js"],"sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Button, Column, Tag, Title, List } from \"rbx\";\r\nimport Moment from 'moment';\r\n\r\n// Moment - Used to verify a date and extract information.\r\n// List - Notes from components/notes to LIST.ITEM (Notes loop).\r\n\r\n// onClick - The note you click will change color and will be displayed on the screen.\r\n// substring (0,15) - Will display 16 characters of title.\r\n\r\n//Regular expression (REGEX) - (/(<([^>]+)>)/ig, \"\") - Technique to select elements and not show html commands used in the text.\r\n//EX: Title in bold - Will not show <b>, only the title already edited.\r\n\r\nfunction ListNotes(props) {\r\n    return (\r\n        <Fragment>\r\n            <Column.Group breakpoint=\"mobile\">\r\n                <Column size={6} offset={1}>\r\n                    <Title  size={6}>\r\n                            {props.notes.length} Notes\r\n                    </Title>\r\n                </Column>\r\n            </Column.Group>\r\n            <List   className=\"notes-list\">\r\n                    {props.notes.map((item, key) =>\r\n            <List.Item key={key} onClick={() => props.selectNote(item._id)} active={item == props.current_note}>\r\n                <Title  size={6}>\r\n                        {item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0,15)}\r\n                </Title>\r\n                <Title  size={6} subtitle spaced={false}>\r\n                        {item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0,30)}\r\n                </Title>\r\n\r\n                <Column.Group   breakpoint=\"mobile\">\r\n                    <Column     size={10}>\r\n                        <Tag    color=\"dark\">\r\n                                {Moment(item.created_at).format('DD/MM')}\r\n                        </Tag>\r\n                    </Column>\r\n                </Column.Group>\r\n            </List.Item>\r\n        )}\r\n            </List>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListNotes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}