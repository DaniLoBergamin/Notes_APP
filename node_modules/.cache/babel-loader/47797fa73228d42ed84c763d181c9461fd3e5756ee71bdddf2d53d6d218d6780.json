{"ast":null,"code":"var _jsxFileName = \"C:\\\\APP_Evernote\\\\javascript_note\\\\src\\\\components\\\\notes\\\\index.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Column, Button } from \"rbx\";\nimport \"../../styles/notes.scss\";\nimport { push as Menu } from 'react-burger-menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Column.Group, {\n      className: \"notes\",\n      id: \"notes\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        pageWrapId: \"notes-editor\",\n        isOpen: props.isOpen,\n        onStateChange: state => props.setIsOpen(state.isOpen),\n        disableAutoFocus: true,\n        outerContainerId: \"notes\",\n        customBurgerIcon: false,\n        customCrossIcon: false,\n        children: [/*#__PURE__*/_jsxDEV(Column.Group, {\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            size: 10,\n            offset: 1,\n            children: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"List...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        size: 12,\n        className: \"notes-editor\",\n        id: \"notes-editor\",\n        children: \"Editor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Column","Button","push","Menu","jsxDEV","_jsxDEV","Notes","props","children","Group","className","id","pageWrapId","isOpen","onStateChange","state","setIsOpen","disableAutoFocus","outerContainerId","customBurgerIcon","customCrossIcon","size","offset","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/APP_Evernote/javascript_note/src/components/notes/index.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Column, Button } from \"rbx\";\r\nimport \"../../styles/notes.scss\";\r\nimport { push as Menu } from 'react-burger-menu'\r\n\r\n\r\nfunction Notes(props) {\r\n\r\n    return (\r\n        <Fragment>\r\n            <Column.Group className=\"notes\" id=\"notes\">\r\n                <Menu   pageWrapId={\"notes-editor\"}\r\n                        isOpen={props.isOpen}\r\n                        onStateChange={(state) => props.setIsOpen(state.isOpen)}\r\n                        disableAutoFocus\r\n                        outerContainerId={\"notes\"}\r\n                        customBurgerIcon={false}\r\n                        customCrossIcon={false}>\r\n            <Column.Group>\r\n            <Column size={10} offset={1}>\r\n                Search...\r\n            </Column>\r\n            </Column.Group>\r\n                    <p>List...</p>\r\n                </Menu>\r\n\r\n                <Column size={12} className=\"notes-editor\" id=\"notes-editor\">\r\n                    Editor...\r\n                </Column>\r\n            </Column.Group>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Notes;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,SAASC,MAAM,EAAEC,MAAM,QAAQ,KAAK;AACpC,OAAO,yBAAyB;AAChC,SAASC,IAAI,IAAIC,IAAI,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhD,SAASC,KAAKA,CAACC,KAAK,EAAE;EAElB,oBACIF,OAAA,CAACR,QAAQ;IAAAW,QAAA,eACLH,OAAA,CAACL,MAAM,CAACS,KAAK;MAACC,SAAS,EAAC,OAAO;MAACC,EAAE,EAAC,OAAO;MAAAH,QAAA,gBACtCH,OAAA,CAACF,IAAI;QAAGS,UAAU,EAAE,cAAe;QAC3BC,MAAM,EAAEN,KAAK,CAACM,MAAO;QACrBC,aAAa,EAAGC,KAAK,IAAKR,KAAK,CAACS,SAAS,CAACD,KAAK,CAACF,MAAM,CAAE;QACxDI,gBAAgB;QAChBC,gBAAgB,EAAE,OAAQ;QAC1BC,gBAAgB,EAAE,KAAM;QACxBC,eAAe,EAAE,KAAM;QAAAZ,QAAA,gBACnCH,OAAA,CAACL,MAAM,CAACS,KAAK;UAAAD,QAAA,eACbH,OAAA,CAACL,MAAM;YAACqB,IAAI,EAAE,EAAG;YAACC,MAAM,EAAE,CAAE;YAAAd,QAAA,EAAC;UAE7B;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC,eACPrB,OAAA;UAAAG,QAAA,EAAG;QAAO;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eAEPrB,OAAA,CAACL,MAAM;QAACqB,IAAI,EAAE,EAAG;QAACX,SAAS,EAAC,cAAc;QAACC,EAAE,EAAC,cAAc;QAAAH,QAAA,EAAC;MAE7D;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEnB;AAACC,EAAA,GA1BQrB,KAAK;AA4Bd,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}