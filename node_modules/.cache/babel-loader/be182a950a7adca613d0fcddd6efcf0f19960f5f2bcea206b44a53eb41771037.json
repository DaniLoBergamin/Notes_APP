{"ast":null,"code":"var _jsxFileName = \"C:\\\\APP_Evernote\\\\javascript_note\\\\src\\\\components\\\\notes\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Column, Button } from \"rbx\";\nimport \"../../styles/notes.scss\";\nimport { push as Menu } from 'react-burger-menu';\nimport List from \"../notes/list\";\nimport NoteService from '../../services/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes(props) {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [current_note, setCurrentNote] = useState({\n    title: \"\",\n    body: \"\",\n    id: \"\"\n  });\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  async function fetchNotes() {\n    const response = await NoteService.index();\n    if (response.data.length >= 1) {\n      // data.reverse() - List notes from newest to oldest.\n      setNotes(response.data.reverse());\n      setCurrentNote(response.data[0]);\n    }\n  }\n\n  // Through the id, it searches the notes and lists the currentNote\n  const selectNote = id => {\n    const note = notes.find(note => {\n      return note._id == id;\n    });\n    setCurrentNote(note);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Column.Group, {\n      className: \"notes\",\n      id: \"notes\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        pageWrapId: \"notes-editor\",\n        isOpen: props.isOpen,\n        onStateChange: state => props.setIsOpen(state.isOpen),\n        disableAutoFocus: true,\n        outerContainerId: \"notes\",\n        customBurgerIcon: false,\n        customCrossIcon: false,\n        children: [/*#__PURE__*/_jsxDEV(Column.Group, {\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            size: 10,\n            offset: 1,\n            children: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          notes: notes,\n          selectNote: selectNote,\n          current_note: current_note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        size: 12,\n        className: \"notes-editor\",\n        id: \"notes-editor\",\n        children: \"Editor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Notes, \"EGRBH0YG/KxrdYJu4/WeV9xm4Xo=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Column","Button","push","Menu","List","NoteService","jsxDEV","_jsxDEV","Notes","props","_s","notes","setNotes","current_note","setCurrentNote","title","body","id","fetchNotes","response","index","data","length","reverse","selectNote","note","find","_id","children","Group","className","pageWrapId","isOpen","onStateChange","state","setIsOpen","disableAutoFocus","outerContainerId","customBurgerIcon","customCrossIcon","size","offset","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/APP_Evernote/javascript_note/src/components/notes/index.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Column, Button } from \"rbx\";\r\nimport \"../../styles/notes.scss\";\r\nimport { push as Menu } from 'react-burger-menu'\r\nimport List from \"../notes/list\";\r\nimport NoteService from '../../services/notes';\r\n\r\n\r\n\r\nfunction Notes(props) {\r\n    const [notes, setNotes] = useState([]);\r\n    const [current_note, setCurrentNote] = useState({ title: \"\", body: \"\", id: \"\" });\r\n\r\n    useEffect(() => {\r\n        fetchNotes();\r\n    }, []);\r\n\r\n    async function fetchNotes() {\r\n    const response = await NoteService.index();\r\n        if (response.data.length >= 1) {\r\n            // data.reverse() - List notes from newest to oldest.\r\n            setNotes(response.data.reverse())\r\n            setCurrentNote(response.data[0])\r\n        }\r\n    }\r\n\r\n    // Through the id, it searches the notes and lists the currentNote\r\n    const selectNote = (id) => {\r\n    const note = notes.find((note) => {\r\n        return note._id == id;\r\n        })\r\n        setCurrentNote(note);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Column.Group className=\"notes\" id=\"notes\">\r\n                <Menu   pageWrapId={\"notes-editor\"}\r\n                        isOpen={props.isOpen}\r\n                        onStateChange={(state) => props.setIsOpen(state.isOpen)}\r\n                        disableAutoFocus\r\n                        outerContainerId={\"notes\"}\r\n                        customBurgerIcon={false}\r\n                        customCrossIcon={false}>\r\n            <Column.Group>\r\n            <Column size={10} offset={1}>\r\n                Search...\r\n            </Column>\r\n            </Column.Group>\r\n            <List   notes={notes}\r\n                    selectNote={selectNote}\r\n                    current_note={current_note} />\r\n                </Menu>\r\n\r\n                <Column size={12} className=\"notes-editor\" id=\"notes-editor\">\r\n                    Editor...\r\n                </Column>\r\n            </Column.Group>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Notes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}