{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n  backgroundColor: PropTypes.oneOf([...vars.colors, ...vars.shades]),\n  italic: PropTypes.bool,\n  textAlign: PropTypes.oneOf(vars.textAlignments),\n  textColor: PropTypes.oneOf([...vars.colors, ...vars.shades]),\n  textSize: PropTypes.oneOf(vars.textSizes),\n  textTransform: PropTypes.oneOf(vars.textTransforms),\n  textWeight: PropTypes.oneOf(vars.textWeights)\n}));\nexport const transform = props => {\n  const {\n      backgroundColor,\n      className,\n      italic,\n      textAlign,\n      textColor,\n      textSize,\n      textTransform,\n      textWeight\n    } = props,\n    rest = tslib_1.__rest(props, [\"backgroundColor\", \"className\", \"italic\", \"textAlign\", \"textColor\", \"textSize\", \"textTransform\", \"textWeight\"]);\n  return Object.assign({\n    className: classNames({\n      [`has-background-${backgroundColor}`]: backgroundColor,\n      [`has-text-${textColor}`]: textColor,\n      \"is-italic\": italic,\n      [`is-${textTransform}`]: textTransform,\n      [`has-text-${textAlign}`]: textAlign,\n      [`has-text-weight-${textWeight}`]: textWeight,\n      [`is-size-${textSize}`]: textSize\n    }, className)\n  }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"names":["classNames","PropTypes","makePropTypesFactory","makeValidatingTransformFactory","makePropTypes","vars","backgroundColor","oneOf","colors","shades","italic","bool","textAlign","textAlignments","textColor","textSize","textSizes","textTransform","textTransforms","textWeight","textWeights","transform","props","className","rest","tslib_1","__rest","Object","assign","makeValidatingTransform"],"sources":["../../../src/base/helpers/typography.ts"],"sourcesContent":[null],"mappings":";AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,YAAY;AAElC,SACEC,oBAAoB,EACpBC,8BAA8B,QAEzB,WAAW;AAclB,OAAO,MAAMC,aAAa,GAAGF,oBAAoB,CAACG,IAAI,KAAK;EACzDC,eAAe,EAAEL,SAAS,CAACM,KAAK,CAAC,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAE,GAAGH,IAAI,CAACI,MAAM,CAAC,CAAC;EAClEC,MAAM,EAAET,SAAS,CAACU,IAAI;EACtBC,SAAS,EAAEX,SAAS,CAACM,KAAK,CAACF,IAAI,CAACQ,cAAc,CAAC;EAC/CC,SAAS,EAAEb,SAAS,CAACM,KAAK,CAAC,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAE,GAAGH,IAAI,CAACI,MAAM,CAAC,CAAC;EAC5DM,QAAQ,EAAEd,SAAS,CAACM,KAAK,CAACF,IAAI,CAACW,SAAS,CAAC;EACzCC,aAAa,EAAEhB,SAAS,CAACM,KAAK,CAACF,IAAI,CAACa,cAAc,CAAC;EACnDC,UAAU,EAAElB,SAAS,CAACM,KAAK,CAACF,IAAI,CAACe,WAAW;CAC7C,CAAC,CAAC;AAEH,OAAO,MAAMC,SAAS,GAA8CC,KAAK,IAAG;EAC1E,MAAM;MACJhB,eAAe;MACfiB,SAAS;MACTb,MAAM;MACNE,SAAS;MACTE,SAAS;MACTC,QAAQ;MACRE,aAAa;MACbE;IAAU,IAERG,KAAK;IADPE,IAAA,GAAAC,OAAA,CAAAC,MAAA,CAAAJ,KAAA,kHACO;EAET,OAAAK,MAAA,CAAAC,MAAA;IACEL,SAAS,EAAEvB,UAAU,CACnB;MACE,CAAC,kBAAkBM,eAAe,EAAE,GAAGA,eAAe;MACtD,CAAC,YAAYQ,SAAS,EAAE,GAAGA,SAAS;MACpC,WAAW,EAAEJ,MAAM;MACnB,CAAC,MAAMO,aAAa,EAAE,GAAGA,aAAa;MACtC,CAAC,YAAYL,SAAS,EAAE,GAAGA,SAAS;MACpC,CAAC,mBAAmBO,UAAU,EAAE,GAAGA,UAAU;MAC7C,CAAC,WAAWJ,QAAQ,EAAE,GAAGA;KAC1B,EACDQ,SAAS;EACV,GACEC,IAAI;AAEX,CAAC;AAED,OAAO,MAAMK,uBAAuB,GAAG1B,8BAA8B,CACnEC,aAAa,EACbiB,SAAS,CACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}